import React from 'react';
import { useState } from 'react';
// import { images } from '../../constants';

import './Gallery.css';

const instagramFeed = ['/gallery04.png', '/gallery03.png', '/gallery02.png', '/gallery01.png']

instagramFeed.map(item => console.log(item));

const Gallery = () => {
  const [igThumbnail, setIgThumbnail] = useState(false)

  const handleIgthumbnail = () => {
    setIgThumbnail(prev => !prev);
  }

  return (
      <div className='gallery__wrapper'>
        <div className='gallery__left'>
          <h1 className='gallery__instagram'>Instagram</h1>
          <svg width="40" height="10" viewBox="0 0 40 10" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M33.5016 9.5C37.0849 9.5 40 7.48129 40 4.99995C40 2.51861 37.0849 0.5 33.5016 0.5C30.1122 0.5 27.3221 2.30637 27.03 4.6018H22.3529V3.6552L0 3.6552V6.34446L22.353 6.34446V5.39798H27.0301C27.3223 7.69352 30.1122 9.5 33.5016 9.5ZM21.4898 5.54839L0.863293 5.54839V4.45161H21.4898V5.54839ZM27.8662 4.99995C27.8662 2.95778 30.3944 1.2964 33.5017 1.2964C36.6091 1.2964 39.1372 2.95778 39.1372 4.99995C39.1372 7.04222 36.6091 8.7037 33.5017 8.7037C30.3944 8.7037 27.8662 7.04222 27.8662 4.99995Z" fill="#DCCA87"/>
          </svg>
          <h2 className='gallery__title'>Photo Gallery</h2>
          <p className='gallery__desc'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Volutpat mattis ipsum turpis elit elit scelerisque egestas mu.</p>
          <button type="button" className="custom__button">View More</button>
        </div>
        <div className='gallery__right'>
          <div className='gallery__ig-wrapper' onMouseOver={handleIgthumbnail.bind()}>
            {instagramFeed.map(item =>
              <div key={item}>
                <img className='gallery_img' src={item} alt="foto gallery" />
                {/* {igThumbnail && (
                  <svg className='gallery__ig' width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M33.57 7.82967C33.0558 7.82967 32.5531 7.98216 32.1255 8.26785C31.6979 8.55355 31.3647 8.95961 31.1679 9.4347C30.9711 9.90979 30.9196 10.4326 31.0199 10.9369C31.1203 11.4413 31.3679 11.9045 31.7315 12.2682C32.0951 12.6318 32.5584 12.8794 33.0628 12.9797C33.5671 13.08 34.0899 13.0285 34.565 12.8318C35.0401 12.635 35.4461 12.3017 35.7318 11.8742C36.0175 11.4466 36.17 10.9439 36.17 10.4297C36.17 9.74011 35.8961 9.07879 35.4085 8.5912C34.9209 8.1036 34.2595 7.82967 33.57 7.82967ZM43.5367 13.073C43.4945 11.2753 43.1578 9.49671 42.54 7.80801C41.9891 6.36313 41.1316 5.05478 40.0267 3.97301C38.9538 2.86243 37.6424 2.01039 36.1917 1.48134C34.5074 0.84469 32.7268 0.500296 30.9267 0.463008C28.63 0.333008 27.8933 0.333008 22 0.333008C16.1066 0.333008 15.37 0.333008 13.0733 0.463008C11.2731 0.500296 9.49256 0.84469 7.80831 1.48134C6.36028 2.01575 5.05 2.86706 3.97331 3.97301C2.86274 5.04589 2.0107 6.35729 1.48165 7.80801C0.844995 9.49225 0.500601 11.2728 0.463313 13.073C0.333313 15.3697 0.333313 16.1063 0.333313 21.9997C0.333313 27.893 0.333313 28.6297 0.463313 30.9263C0.500601 32.7265 0.844995 34.5071 1.48165 36.1913C2.0107 37.6421 2.86274 38.9535 3.97331 40.0263C5.05 41.1323 6.36028 41.9836 7.80831 42.518C9.49256 43.1547 11.2731 43.4991 13.0733 43.5363C15.37 43.6663 16.1066 43.6663 22 43.6663C27.8933 43.6663 28.63 43.6663 30.9267 43.5363C32.7268 43.4991 34.5074 43.1547 36.1917 42.518C37.6424 41.989 38.9538 41.1369 40.0267 40.0263C41.1365 38.9486 41.9947 37.6391 42.54 36.1913C43.1578 34.5026 43.4945 32.724 43.5367 30.9263C43.5367 28.6297 43.6667 27.893 43.6667 21.9997C43.6667 16.1063 43.6667 15.3697 43.5367 13.073ZM39.6367 30.6663C39.6209 32.0417 39.3718 33.4044 38.9 34.6963C38.554 35.6393 37.9984 36.4913 37.275 37.188C36.5722 37.9041 35.722 38.4586 34.7833 38.813C33.4913 39.2848 32.1287 39.5339 30.7533 39.5497C28.5867 39.658 27.785 39.6797 22.0866 39.6797C16.3883 39.6797 15.5866 39.6797 13.42 39.5497C11.9919 39.5764 10.5699 39.3565 9.21665 38.8997C8.31917 38.5272 7.50792 37.974 6.83331 37.2747C6.11417 36.5786 5.56547 35.7259 5.22998 34.783C4.701 33.4725 4.40761 32.0789 4.36331 30.6663C4.36331 28.4997 4.23331 27.698 4.23331 21.9997C4.23331 16.3013 4.23331 15.4997 4.36331 13.333C4.37303 11.927 4.62971 10.5336 5.12165 9.21634C5.50308 8.30182 6.08855 7.4866 6.83331 6.83301C7.49158 6.08804 8.3051 5.49638 9.21665 5.09967C10.5373 4.6231 11.9293 4.37401 13.3333 4.36301C15.5 4.36301 16.3016 4.23301 22 4.23301C27.6983 4.23301 28.5 4.23301 30.6667 4.36301C32.042 4.37878 33.4047 4.62788 34.6967 5.09967C35.6813 5.46509 36.565 6.05918 37.275 6.83301C37.985 7.49856 38.5398 8.31226 38.9 9.21634C39.3815 10.5357 39.6308 11.9285 39.6367 13.333C39.745 15.4997 39.7667 16.3013 39.7667 21.9997C39.7667 27.698 39.745 28.4997 39.6367 30.6663ZM22 10.8847C19.8026 10.889 17.6557 11.5445 15.8307 12.7684C14.0057 13.9923 12.5845 15.7298 11.7465 17.7611C10.9086 19.7925 10.6916 22.0267 11.1229 24.1814C11.5542 26.336 12.6145 28.3145 14.1698 29.8668C15.7251 31.4191 17.7057 32.4755 19.8612 32.9027C22.0167 33.3298 24.2504 33.1084 26.2802 32.2665C28.3099 31.4246 30.0446 30 31.2649 28.1726C32.4853 26.3452 33.1366 24.1971 33.1367 21.9997C33.1395 20.5374 32.8533 19.089 32.2943 17.7377C31.7354 16.3865 30.9149 15.1591 29.8799 14.1261C28.8449 13.0931 27.6159 12.275 26.2635 11.7187C24.9112 11.1624 23.4622 10.879 22 10.8847ZM22 29.2147C20.573 29.2147 19.178 28.7915 17.9915 27.9987C16.805 27.2059 15.8803 26.0791 15.3342 24.7607C14.7881 23.4424 14.6452 21.9917 14.9236 20.5921C15.202 19.1925 15.8892 17.9069 16.8982 16.8979C17.9072 15.8889 19.1928 15.2017 20.5924 14.9233C21.992 14.6449 23.4427 14.7878 24.761 15.3339C26.0794 15.88 27.2062 16.8047 27.999 17.9912C28.7918 19.1777 29.215 20.5727 29.215 21.9997C29.215 22.9472 29.0284 23.8854 28.6658 24.7607C28.3032 25.6361 27.7717 26.4315 27.1018 27.1015C26.4318 27.7714 25.6364 28.3029 24.761 28.6655C23.8857 29.0281 22.9475 29.2147 22 29.2147Z" fill="white"/>
                  </svg>
                )} */}
              </div>
              )}
          </div>
        </div>
    </div>
  )
};

export default Gallery;
